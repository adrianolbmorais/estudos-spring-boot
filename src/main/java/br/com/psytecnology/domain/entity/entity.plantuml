@startuml

title __ENTITY's Class Diagram__\n

  namespace br.com.psytecnology {
    namespace domain.entity {
      class br.com.psytecnology.domain.entity.Cliente {
          - cpf : String
          - id : Integer
          - nome : String
          - pedidos : Set<Pedido>
          + Cliente()
          + Cliente()
          + Cliente()
          + cpf()
          + equals()
          + getCpf()
          + getId()
          + getNome()
          + getPedidos()
          + hashCode()
          + id()
          + nome()
          + pedidos()
          + setCpf()
          + setId()
          + setNome()
          + setPedidos()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace br.com.psytecnology {
    namespace domain.entity {
      class br.com.psytecnology.domain.entity.ItemPedido {
          - id : Integer
          - quantidade : Integer
          + ItemPedido()
          + ItemPedido()
          + equals()
          + getId()
          + getPedido()
          + getProduto()
          + getQuantidade()
          + hashCode()
          + id()
          + pedido()
          + produto()
          + quantidade()
          + setId()
          + setPedido()
          + setProduto()
          + setQuantidade()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace br.com.psytecnology {
    namespace domain.entity {
      class br.com.psytecnology.domain.entity.Pedido {
          - dataPedido : LocalDate
          - id : Integer
          - itens : List<ItemPedido>
          - total : BigDecimal
          + Pedido()
          + Pedido()
          + cliente()
          + dataPedido()
          + equals()
          + getCliente()
          + getDataPedido()
          + getId()
          + getItens()
          + getStatus()
          + getTotal()
          + hashCode()
          + id()
          + itens()
          + setCliente()
          + setDataPedido()
          + setId()
          + setItens()
          + setStatus()
          + setTotal()
          + status()
          + toString()
          + total()
          # canEqual()
      }
    }
  }
  

  namespace br.com.psytecnology {
    namespace domain.entity {
      class br.com.psytecnology.domain.entity.Produto {
          - descricao : String
          - id : Integer
          - itensPedido : Set<ItemPedido>
          - preco : BigDecimal
          + Produto()
          + Produto()
          + descricao()
          + equals()
          + getDescricao()
          + getId()
          + getItensPedido()
          + getPreco()
          + hashCode()
          + id()
          + itensPedido()
          + preco()
          + setDescricao()
          + setId()
          + setItensPedido()
          + setPreco()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace br.com.psytecnology {
    namespace domain.entity {
      class br.com.psytecnology.domain.entity.Usuario {
          - admin : boolean
          - id : Integer
          - nomeUsuario : String
          - senha : String
          + Usuario()
          + Usuario()
          {static} + builder()
          + equals()
          + getId()
          + getNomeUsuario()
          + getSenha()
          + hashCode()
          + isAdmin()
          + setAdmin()
          + setId()
          + setNomeUsuario()
          + setSenha()
          + toString()
          # canEqual()
      }
    }
  }
  

  namespace br.com.psytecnology {
    namespace domain.entity {
      class br.com.psytecnology.domain.entity.Usuario.UsuarioBuilder {
          - admin : boolean
          - id : Integer
          - nomeUsuario : String
          - senha : String
          + admin()
          + build()
          + id()
          + nomeUsuario()
          + senha()
          + toString()
          ~ UsuarioBuilder()
      }
    }
  }
  

  br.com.psytecnology.domain.entity.ItemPedido o-- br.com.psytecnology.domain.entity.Pedido : pedido
  br.com.psytecnology.domain.entity.ItemPedido o-- br.com.psytecnology.domain.entity.Produto : produto
  br.com.psytecnology.domain.entity.Pedido o-- br.com.psytecnology.domain.entity.Cliente : cliente
  br.com.psytecnology.domain.entity.Pedido o-- br.com.psytecnology.domain.enums.StatusPedido : status
  br.com.psytecnology.domain.entity.Usuario +-down- br.com.psytecnology.domain.entity.Usuario.UsuarioBuilder


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
